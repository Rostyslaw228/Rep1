Мапа розвитку в Data Science, або Як стати дослідником даних
Привіт! Мене звуть Євген, я дослідник даних. Ця стаття — моя спроба окреслити програму самоосвіти, достатню для того, щоб розпочати кар’єру в Data Science. Усе, що я нижче напишу, — суб’єктивно. Що не суб’єктивно, то це факт, що для мене це спрацювало і я таки працюю дослідником даних. Ці поради можна порівнювати з хлібними крихтами, що залишали по собі Гензель і Ґретель у відомій казці. Ця дорожня мапа може привести вас до мети тим шляхом, яким уже проходили раніше. Крім того, така освіта не є вичерпною для дослідника, а лише достатньою, щоб знайти першу роботу. Отже, з чого починати?

Огляд потрібних знань і навичок
Ви напевно вже бачили подібну діаграму Венна, складену з галузей, на перетині яких формується професія Data Scientist.
(рисунок діаграма Венна)
Відповідно до наведеної діаграми та враховуючи вимоги до новачків, під час підготовки варто зосередитися на таких моментах:
- вивчення потрібних аналітикові інструментів і мови програмування;
- вивчення статистики й математики;
- ознайомлення з методами машинного навчання;
- усвідомити, як усе перелічене застосовують для дослідження даних.
До того ж у межах Data Science є спеціалізації. Наведена нижче ілюстрація демонструє, що вам не обов’язково досконало розбиратися в усьому. Ви можете вибрати спеціалізацію залежно від ваших здібностей і вподобань.
(рисунок спеціалізації)
Докладніше про спеціалізацію в DS дивіться в доповіді Олексія Натьокіна (https://youtu.be/lDkTNURDIaY).
І хоча це дорожня мапа, ця дорога не є лінійною. Хронологічного порядку тут немає, учити можна в будь-якій послідовності, ітеративно. Та й сам поділ умовний, бо часто курси та книжки одночасно охоплюють і теорію, й інструменти, і безпосередньо ML та DS. Тож розглянемо детальніше, що саме й де вчити.

Інструменти
Що стосується інструментів, у моєму випадку це Python, NumPy, pandas, SciPy, Matplotlib, Jupyter Notebook, scikit-learn, Keras тощо.
Python я почав вивчати за книжкою «Learning Python» (https://learning-python.com/about-lp.html) Марка Лутца, документацією й Stack Overflow. Варто зазначити, що для мене Python був не першою мовою програмування. Маючи досвід програмування такими мовами, як Java, Scala, Groovy, JavaScript і TypeScript, я вже мав певне уявлення про парадигми та принципи розробки ПЗ. Тож моє знайомство з Python може відрізнятися від вашого. Добра новина в тому, що для початківця-дослідника даних не обов’язково досконало розбиратися в програмуванні. Для початку досить засвоїти основи мови й опанувати популярні інструменти для аналітики. Слід навчитися перетворювати алгоритми й математичні формули на код. І варто вміти працювати зі структурами даних: послідовності, таблиці, тензори, словники, дерева й графи загалом. Проте, коли буде час і натхнення, раджу розібратися, що таке OOP, SOLID, FP тощо. Приділіть увагу тестуванню, логуванню, lint-перевірці і практикам чистого коду. Так робота з кодом стане приємнішою і, можливо, життя стане ліпшим.

Для дослідження даних вам знадобиться зручне середовище. Поширеним середовищем для дослідників є Jupyter Notebook. Він має інтуїтивно зрозумілий інтерфейс, і його засвоєння не потребує якихось складних курсів. Для швидких експериментів не обов’язково ставити Notebook локально, досить мати інтернет і скористатись онлайновим сервісом. Наприклад, Google Colaboratory (https://colab.research.google.com/). Там уже є більшість базових для DS та ML модулів, потрібні можна доставити. Є інтеграція з Google-диском, де можна тримати дані, а також інтеграція з GitHub. Загалом, зручна штука.

Наступний інструмент у списку — бібліотека NumPy. Вона надає інтерфейс для застосування математичних функцій для операцій над тензорами. Її використовують, наприклад, щоб представити зображення як тензор, де кожне значення відповідає пікселю вашого зображення. Вибірку тензорів використовують як input для моделі. Знайомство з NumPy можна розпочати з цієї чи цієї статті. Якщо вам бракує математичних функцій у NumPy, зверніть увагу на SciPy.
Підключити бібліотеку можна 
import numpy as np
Створення масиву
a = np.array([1, 4, 5, 8], float)
>>> a
array([ 1.,  4.,  5.,  8.])
>>> type(a)
<class 'numpy.ndarray'>

Бібліотека pandas надає зручний інтерфейс для роботи з індексованими табличними даними (DataFrame) і послідовностями (Series). Зручніша за NumPy для роботи з часовими рядами, має вбудовані функції для візуалізації даних, роботи з файлами, такими як csv, тощо. З pandas можна ознайомитись у цій статті в межах курсу від Open Data Science та в курсі від Мічиганського університету. Далі ми ще не раз повернемося до цих курсів.

Тепер, коли ви вже знаєте деякі інструменти для роботи з даними, можете їх дослідити й підготувати до використання, можна розглянути бібліотеки для машинного навчання — scikit-learn та бібліотеку для глибинного навчання — Keras. Проте в тих курсах і книжках, на які я натрапляв, ці бібліотеки розглядають невід’ємно, як складову частину курсу з машинного навчання взагалі. Тому докладніше, де вивчати машинне навчання й ці бібліотеки, я опишу нижче.

Крім того, під час дослідження даних, оцінювання моделі й представлення результату часто виникає потреба у візуалізації. Серед поширених інструментів візуалізації —Matplotlib, Seaborn, Plotly тощо. Ознайомитися з цими інструментами можна в цій статті. Проте візуалізація даних — це не лише володіння інструментами. Створенню візуалізації має передувати глибоке дослідження даних і розуміння, що саме ви хочете продемонструвати. Візуалізацію можна розглядати і як окремий фах, і як неодмінний складник роботи аналітика даних.

Machine Learning
Саме ML обумовив потужний розвиток сфери дослідження даних у наш час. І, можливо, не через шалену пристрасть до нормального розподілу й коробкових діаграм, а саме через інтерес до ML, AI та Skynet ви зацікавилися Data Science. Тож більше не зволікатиму й перейду до найцікавішого.

Почну з загального огляду. Якщо на старті ви плутаєтеся в усьому зоопарку моделей, перегляньте статтю (https://vas3k.ru/blog/machine_learning/), яка без технічних деталей і формул допоможе вам розібратися.

На платформі Prometheus є курс (https://courses.prometheus.org.ua/courses/IRF/ML101/2016_T3/about) від Олеся Петріва (фахівець із Deep Learning і Computer Vision). Загалом курс з основ ML, багато теорії, але на останньому тижні розглядають і приклади CNN та LSTM нейронних мереж, з цього можна почати своє знайомство з Deep Learning і бібліотекою Keras.

Проте на цьому етапі я не радив би одразу занурюватися в DL, розберімося докладніше в класичному машинному навчанні.

Тут вам не обійтися без бібліотеки sklearn, яку я згадував у розділі «Інструменти». Scikit-learn часто використовують у підручниках і курсах з основ ML, бо вона надає високорівневий API. З цим інструментом ви можете, не заглиблюючись у математику й деталі реалізації, зосередитися на побудові pipeline з підготовкою та трансформацією даних, підбором гіперпараметрів моделі, валідацією та оцінкою точності результатів.

Отже, sklearn і основи ML можна вивчити на курсі від Мічиганського університету. Також є розкішна книжка «Introduction to Machine Learning with Python» Андреаса Мюллера й Сари Ґвідо.

Ґрунтовніше пояснення деяких методів ML є в згаданому вище циклі статей або на курсі mlcourse.ai. Загалом, певне розуміння того, як саме влаштовано методи машинного навчання та базові знання з математики і статистики, дасть вам змогу краще налаштувати гіперпараметри моделі, підібрати цільову функцію та метрики для оцінювання результату.

Після знайомства з класичним ML час більше дізнатися про Deep Learning. Можу порадити розкішну книжку «Deep Learning with Python» Франсуа Шолле. Варто зауважити, що ця книжка закладе базові знання. Водночас нові архітектури моделей і їх модифікації з’являються мало не щодня. Це доволі експериментальна сфера, стежте за новинами в Deep Learning і feel free долучатися до експериментів.
Таблиця - Порівняння бібліотек для машинного навчання
(згідно рисунку таблиця)

Корисні джерела
Інтернет-ресурси:
- цікаві статті (https://towardsdatascience.com/);
- ще цікаві статті (https://machinelearningmastery.com/);
- авторський сайт Олександра Ємеліна про вищу математику (http://mathprofi.ru/).

Книжки:
- «Make Your Own Neural Network» by Tariq Rashid (https://www.amazon.com/Make-Your-Own-Neural-Network-ebook/dp/B01EER4Z4G);
- «Introduction to Machine Learning with Python» by Sarah Guido, Andreas C. Müller (https://www.oreilly.com/library/view/introduction-to-machine/9781449369880/);
- «Deep Learning with Python» by François Chollet (https://www.manning.com/books/deep-learning-with-python);
- «The Functional Art» by Alberto Cairo (https://www.amazon.com/gp/product/0321834739/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0321834739&linkCode=as2&tag=thefunart03-20&tag=donations09-20);
- «How Not to Be Wrong» by Jordan Ellenberg (https://www.washingtonpost.com/opinions/book-review-how-not-to-be-wrong-the-power-of-mathematical-thinking-by-jordan-ellenberg/2014/06/13/40527e94-d9f5-11e3-b745-87d39690c5c0_story.html);
- «Everybody Lies» by Seth Stephens-Davidowitz (http://sethsd.com/everybodylies).

Коментарі
(аватарка)Dima Doroshenko (din@ho.ua), Львів 14.04.2020 14:15
Ні слова про Business Intelligence, і тулзи, жалько(

	(аватарка)Євген Голюк Software Developer / Data Scientist1 (test@example.com), Київ 6.04.2020 19:34
	Дякую за відгук!
	Ви праві, тут дійсно ні слова про Business Intelligence. Це тому, що Business Intelligence та Data Science вирішують різні 	завтдання. Якщо грубо узагальнити, то на мою думку BI — це більше про описову статистику та, напевно, трохи про статистичне 	висновування. DS більше про статистичне висновування, моделювання та оптимізіцію. Деякі ресурси з цієї статті можуть бути 	корисні і для BI. Наприклад, книжка «The Functional Art» Альберто КаЇро. Але загалом, якщо хочете почати кар’єру в BI, то ця 	дорожня мапа не годиться. Я не спеціалізуюсь на BI, не юзаю Tableau, Power BI тощо.

(аватарка)Anton Pavlushko CTO (anton@mail.com), Черкаси 10.04.2020 18:26
Серед величезної кількості булшіт статей про тіпа айтішні теми, потім натрапляєш на таку чудову статтю українською про Data Science! Радієш, що більшість посилань відмічені як вже знайомі, але все одно знаходиш для себе декілька крутих нових! Дякую за статтю — це круто!
	
	(аватарка)Євген Голюк Software Developer / Data Scientist (test@example.com), Київ 10.04.2020 22:11
	Дякую за відгук!

(аватарка)Андрій Хмельницький оцінювач майна (biz@test.com), Київ 08.04.2020 22:02
Дякую за статтю

	(аватарка)Євген Голюк Software Developer / Data Scientist (test@example.com), Київ 08.04.2020 23:38
	Будь ласка
